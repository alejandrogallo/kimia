name: CI

on: [push]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: ubuntu-gcc-4.8
            compiler: gcc
            version: "4.8"

          - name: ubuntu-gcc-4.9
            os: ubuntu-latest
            compiler: gcc
            version: "4.9"

          - name: ubuntu-gcc-5
            os: ubuntu-latest
            compiler: gcc
            version: "5"

          - name: ubuntu-gcc-6
            os: ubuntu-latest
            compiler: gcc
            version: "6"

          - name: ubuntu-gcc-7
            os: ubuntu-latest
            compiler: gcc
            version: "7"

          - name: ubuntu-gcc-8
            os: ubuntu-latest
            compiler: gcc
            version: "8"

          - name: ubuntu-gcc-9
            os: ubuntu-latest
            compiler: gcc
            version: "9"

          - name: ubuntu-latest-gcc-10
            os: ubuntu-latest
            compiler: gcc
            version: "10"

          - name: ubuntu-clang-3.5
            os: ubuntu-latest
            compiler: clang
            version: "3.5"

          - name: ubuntu-clang-3.6
            os: ubuntu-latest
            compiler: clang
            version: "3.6"

          - name: ubuntu-clang-3.7
            os: ubuntu-latest
            compiler: clang
            version: "3.7"

          - name: ubuntu-clang-3.8
            os: ubuntu-latest
            compiler: clang
            version: "3.8"

          - name: ubuntu-clang-3.9
            os: ubuntu-latest
            compiler: clang
            version: "3.9"

          - name: ubuntu-clang-4.0
            os: ubuntu-latest
            compiler: clang
            version: "4.0"

          - name: ubuntu-clang-5.0
            os: ubuntu-latest
            compiler: clang
            version: "5.0"

          - name: ubuntu-clang-6.0
            os: ubuntu-latest
            compiler: clang
            version: "6.0"

          - name: ubuntu-clang-7
            os: ubuntu-latest
            compiler: clang
            version: "7"

          - name: ubuntu-clang-8
            os: ubuntu-latest
            compiler: clang
            version: "8"

    steps:
    - uses: actions/checkout@v2
    - name: Update packages
    - name: Install compiler
      run: |

        # clang-3.7 and earlier are not available in Bionic anymore so we get
        # them from the Xenial repositories instead.
        sudo add-apt-repository "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main"
        sudo add-apt-repository "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe"

        # LLVM 9 is not in Bionic's repositories so we add the official LLVM repository.
        if [ "${{ matrix.compiler }}" = "clang" ] && [ "${{ matrix.version }}" = "9" ]; then
          sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
        fi

        sudo apt-get update

        sudo apt-get install -y libopenmpi-dev openmpi-bin


        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
          echo "::set-env name=CC::gcc-${{ matrix.version }}"
          echo "::set-env name=CXX::g++-${{ matrix.version }}"
        else
          sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
          echo "::set-env name=CC::clang-${{ matrix.version }}"
          echo "::set-env name=CXX::clang++-${{ matrix.version }}"
        fi
    - name: Print compiler version
      run: ${{matrix.compiler}} --version
    - name: Quit
      run: exit 1
    - name: Install gmp
      run: |
        sudo apt-get install -y libgmp10
    - name: Install libgfortran
      run: |
        sudo apt-get install -y libgfortran-10-dev
    - name: Make dependencies
      run: make deps CONFIG=gcc-debug
    - name: Make kimia
      run: make CONFIG=gcc-debug
