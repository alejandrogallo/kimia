name: CI

on: [push]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true # because of the set-env calls


    strategy:
      matrix:
        include:

          #- os: ubuntu-latest
            #name: ubuntu-gcc-4.8
            #compiler: gcc
            #version: "4.8"

          #- name: ubuntu-gcc-4.9
            #os: ubuntu-latest
            #compiler: gcc
            #version: "4.9"

          #- name: ubuntu-gcc-5
            #os: ubuntu-latest
            #compiler: gcc
            #version: "5"

          #- name: ubuntu-gcc-6
            #os: ubuntu-latest
            #compiler: gcc
            #version: "6"

          - name: ubuntu-gcc-7
            os: ubuntu-latest
            compiler: gcc
            version: "7"

          - name: ubuntu-gcc-8
            os: ubuntu-latest
            compiler: gcc
            version: "8"

          - name: ubuntu-gcc-9
            os: ubuntu-latest
            compiler: gcc
            version: "9"

          - name: ubuntu-latest-gcc-10
            os: ubuntu-latest
            compiler: gcc
            version: "10"

          - name: ubuntu-clang-5.0
            os: ubuntu-latest
            compiler: clang
            version: "5.0"

          - name: ubuntu-clang-6.0
            os: ubuntu-latest
            compiler: clang
            version: "6.0"

          - name: ubuntu-clang-7
            os: ubuntu-latest
            compiler: clang
            version: "7"

          - name: ubuntu-clang-8
            os: ubuntu-latest
            compiler: clang
            version: "8"

    steps:
    - uses: actions/checkout@v2
    - name: Install compiler
      run: |

        sudo apt-get update

        sudo apt-get install -y libopenmpi-dev openmpi-bin

        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
          echo "::set-env name=CC::mpicc-${{ matrix.version }}"
          echo "::set-env name=CXX::mpic++-${{ matrix.version }}"
          export CXX=mpic++-${{matrix.version}}
          export CC=mpicc-${{matrix.version}}
          ${CXX} --version
        else
          sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
          echo "::set-env name=CC::clang-${{ matrix.version }}"
          echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          $CXX --version
        fi
    - name: Quit
      run: exit 1
    - name: Install gmp
      run: |
        sudo apt-get install -y libgmp10
    - name: Install libgfortran
      run: |
        sudo apt-get install -y libgfortran-10-dev
    - name: Make dependencies
      run: make deps CONFIG=gcc-debug
    - name: Make kimia
      run: make CONFIG=gcc-debug
